import RPi.GPIO as gpio
import time


# Define o pino que iremos utilizar

PIN=23
 
# Funções

def action_press_button_loop(gpio_pin):
 print “O botao no pino %d foi pressionado!” % (gpio_pin)
 print “Saindo...”
 
def action_press_button(gpio_pin):
 print “Tratando o botão no pino %d que foi pressionado!” % (gpio_pin)
 
# Configuração da GPIO
# Configurando o modo dos pinos como BCM

gpio.setmode(gpio.BCM) 
 
# Configurando PIN como INPUT e modo pull-down interno

gpio.setup(PIN, gpio.IN, pull_up_down = gpio.PUD_DOWN)
 
# Adicionando um evento ao GPIO 23 na mudança de nível alto 3.3V para o nível baixo 0V,
# assim como, adicionar o parâmetro bouncetime de 300 ms, que significa que os primeiros
# 300 ms serão ignorados da leitura.

gpio.add_event_detect(PIN, gpio.FALLING, callback=action_press_button, bouncetime=300)
 
while True:
 print “Polling...”
 
# chama a thread se a borda de descida for detectada

 if gpio.event_detected(PIN):
 action_press_button_loop(PIN)
 break

# tempo para reiniciar o loop 
 time.sleep(1)
 
gpio.cleanup()
exit()